{"version":3,"sources":["../../../src/actions/checkout/asyncActions.js"],"names":["RestApi","Util","closeDrawer","clearCartId","createCart","getCountries","getAccountInformation","checkoutReceiptActions","actions","request","Magento2","BrowserPersistence","storage","beginCheckout","thunk","dispatch","begin","getShippingMethods","cancelCheckout","reset","resetCheckout","editOrder","section","edit","getState","cart","user","cartId","arguments","guestEndpoint","authedEndpoint","endpoint","isSignedIn","response","method","body","JSON","stringify","address","country_id","postcode","receive","error","status","submitPaymentMethodAndBillingAddress","payload","submitBillingAddress","formValues","billingAddress","submitPaymentMethod","paymentMethod","submit","directory","Error","desiredBillingAddress","sameAsShippingAddress","countries","formatAddress","reject","saveBillingAddress","accept","savePaymentMethod","submitShippingAddress","shippingAddress","incorrectAddressMessage","message","saveShippingAddress","submitShippingMethod","shippingMethod","desiredShippingMethod","saveShippingMethod","submitOrder","order","billing_address","retrieveBillingAddress","retrievePaymentMethod","shipping_address","retrieveShippingAddress","shipping_method","retrieveShippingMethod","email","firstname","lastname","telephone","guestShippingEndpoint","authedShippingEndpoint","shippingEndpoint","addressInformation","shipping_carrier_code","carrier_code","shipping_method_code","method_code","guestPaymentEndpoint","authedPaymentEndpoint","paymentEndpoint","additional_data","payment_method_nonce","data","nonce","code","setOrderInformation","id","clearBillingAddress","clearPaymentMethod","clearShippingAddress","clearShippingMethod","createAccount","history","accountInfo","push","URLSearchParams","continueShopping","country","find","region_code","available_regions","regions","region","region_id","name","removeItem","getItem","setItem"],"mappings":"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","sourcesContent":["import { RestApi, Util } from '@magento/peregrine';\n\nimport { closeDrawer } from 'src/actions/app';\nimport { clearCartId, createCart } from 'src/actions/cart';\nimport { getCountries } from 'src/actions/directory';\nimport { getAccountInformation } from 'src/selectors/checkoutReceipt';\nimport checkoutReceiptActions from 'src/actions/checkoutReceipt';\nimport actions from './actions';\n\nconst { request } = RestApi.Magento2;\nconst { BrowserPersistence } = Util;\nconst storage = new BrowserPersistence();\n\nexport const beginCheckout = () =>\n    async function thunk(dispatch) {\n        dispatch(actions.begin());\n        dispatch(getShippingMethods());\n        dispatch(getCountries());\n    };\n\nexport const cancelCheckout = () =>\n    async function thunk(dispatch) {\n        dispatch(actions.reset());\n    };\n\nexport const resetCheckout = () =>\n    async function thunk(dispatch) {\n        await dispatch(closeDrawer());\n        await dispatch(createCart());\n        dispatch(actions.reset());\n    };\n\nexport const editOrder = section =>\n    async function thunk(dispatch) {\n        dispatch(actions.edit(section));\n    };\n\nexport const getShippingMethods = () => {\n    return async function thunk(dispatch, getState) {\n        const { cart, user } = getState();\n        const { cartId } = cart;\n\n        try {\n            // if there isn't a guest cart, create one\n            // then retry this operation\n            if (!cartId) {\n                await dispatch(createCart());\n                return thunk(...arguments);\n            }\n\n            dispatch(actions.getShippingMethods.request(cartId));\n\n            const guestEndpoint = `/rest/V1/guest-carts/${cartId}/estimate-shipping-methods`;\n            const authedEndpoint =\n                '/rest/V1/carts/mine/estimate-shipping-methods';\n            const endpoint = user.isSignedIn ? authedEndpoint : guestEndpoint;\n\n            const response = await request(endpoint, {\n                method: 'POST',\n                body: JSON.stringify({\n                    address: {\n                        country_id: 'US',\n                        postcode: null\n                    }\n                })\n            });\n\n            dispatch(actions.getShippingMethods.receive(response));\n        } catch (error) {\n            const { response } = error;\n\n            dispatch(actions.getShippingMethods.receive(error));\n\n            // check if the guest cart has expired\n            if (response && response.status === 404) {\n                // if so, clear it out, get a new one, and retry.\n                await clearCartId();\n                await dispatch(createCart());\n                return thunk(...arguments);\n            }\n        }\n    };\n};\n\nexport const submitPaymentMethodAndBillingAddress = payload =>\n    async function thunk(dispatch, getState) {\n        submitBillingAddress(payload.formValues.billingAddress)(\n            dispatch,\n            getState\n        );\n        submitPaymentMethod(payload.formValues.paymentMethod)(\n            dispatch,\n            getState\n        );\n    };\n\nexport const submitBillingAddress = payload =>\n    async function thunk(dispatch, getState) {\n        dispatch(actions.billingAddress.submit(payload));\n\n        const { cart, directory } = getState();\n\n        const { cartId } = cart;\n        if (!cartId) {\n            throw new Error('Missing required information: cartId');\n        }\n\n        let desiredBillingAddress = payload;\n        if (!payload.sameAsShippingAddress) {\n            const { countries } = directory;\n            try {\n                desiredBillingAddress = formatAddress(payload, countries);\n            } catch (error) {\n                dispatch(actions.billingAddress.reject(error));\n                return;\n            }\n        }\n\n        await saveBillingAddress(desiredBillingAddress);\n        dispatch(actions.billingAddress.accept(desiredBillingAddress));\n    };\n\nexport const submitPaymentMethod = payload =>\n    async function thunk(dispatch, getState) {\n        dispatch(actions.paymentMethod.submit(payload));\n\n        const { cart } = getState();\n\n        const { cartId } = cart;\n        if (!cartId) {\n            throw new Error('Missing required information: cartId');\n        }\n\n        await savePaymentMethod(payload);\n        dispatch(actions.paymentMethod.accept(payload));\n    };\n\nexport const submitShippingAddress = payload =>\n    async function thunk(dispatch, getState) {\n        dispatch(actions.shippingAddress.submit(payload));\n\n        const { cart, directory } = getState();\n\n        const { cartId } = cart;\n        if (!cartId) {\n            throw new Error('Missing required information: cartId');\n        }\n\n        const { countries } = directory;\n        let { formValues: address } = payload;\n        try {\n            address = formatAddress(address, countries);\n        } catch (error) {\n            dispatch(\n                actions.shippingAddress.reject({\n                    incorrectAddressMessage: error.message\n                })\n            );\n            return null;\n        }\n\n        await saveShippingAddress(address);\n        dispatch(actions.shippingAddress.accept(address));\n    };\n\nexport const submitShippingMethod = payload =>\n    async function thunk(dispatch, getState) {\n        dispatch(actions.shippingMethod.submit(payload));\n\n        const { cart } = getState();\n        const { cartId } = cart;\n        if (!cartId) {\n            throw new Error('Missing required information: cartId');\n        }\n\n        const desiredShippingMethod = payload.formValues.shippingMethod;\n        await saveShippingMethod(desiredShippingMethod);\n        dispatch(actions.shippingMethod.accept(desiredShippingMethod));\n    };\n\nexport const submitOrder = () =>\n    async function thunk(dispatch, getState) {\n        dispatch(actions.order.submit());\n\n        const { cart, user } = getState();\n        const { cartId } = cart;\n        if (!cartId) {\n            throw new Error('Missing required information: cartId');\n        }\n\n        let billing_address = await retrieveBillingAddress();\n        const paymentMethod = await retrievePaymentMethod();\n        const shipping_address = await retrieveShippingAddress();\n        const shipping_method = await retrieveShippingMethod();\n\n        if (billing_address.sameAsShippingAddress) {\n            billing_address = shipping_address;\n        } else {\n            const { email, firstname, lastname, telephone } = shipping_address;\n\n            billing_address = {\n                email,\n                firstname,\n                lastname,\n                telephone,\n                ...billing_address\n            };\n        }\n\n        try {\n            // POST to shipping-information to submit the shipping address and shipping method.\n            const guestShippingEndpoint = `/rest/V1/guest-carts/${cartId}/shipping-information`;\n            const authedShippingEndpoint =\n                '/rest/V1/carts/mine/shipping-information';\n            const shippingEndpoint = user.isSignedIn\n                ? authedShippingEndpoint\n                : guestShippingEndpoint;\n\n            await request(shippingEndpoint, {\n                method: 'POST',\n                body: JSON.stringify({\n                    addressInformation: {\n                        billing_address,\n                        shipping_address,\n                        shipping_carrier_code: shipping_method.carrier_code,\n                        shipping_method_code: shipping_method.method_code\n                    }\n                })\n            });\n\n            // POST to payment-information to submit the payment details and billing address,\n            // Note: this endpoint also actually submits the order.\n            const guestPaymentEndpoint = `/rest/V1/guest-carts/${cartId}/payment-information`;\n            const authedPaymentEndpoint =\n                '/rest/V1/carts/mine/payment-information';\n            const paymentEndpoint = user.isSignedIn\n                ? authedPaymentEndpoint\n                : guestPaymentEndpoint;\n\n            const response = await request(paymentEndpoint, {\n                method: 'POST',\n                body: JSON.stringify({\n                    billingAddress: billing_address,\n                    cartId: cartId,\n                    email: shipping_address.email,\n                    paymentMethod: {\n                        additional_data: {\n                            payment_method_nonce: paymentMethod.data.nonce\n                        },\n                        method: paymentMethod.code\n                    }\n                })\n            });\n\n            dispatch(\n                checkoutReceiptActions.setOrderInformation({\n                    id: response,\n                    billing_address\n                })\n            );\n\n            // Clear out everything we've saved about this cart from local storage.\n            await clearBillingAddress();\n            await clearCartId();\n            await clearPaymentMethod();\n            await clearShippingAddress();\n            await clearShippingMethod();\n\n            dispatch(actions.order.accept(response));\n        } catch (error) {\n            dispatch(actions.order.reject(error));\n        }\n    };\n\nexport const createAccount = history => async (dispatch, getState) => {\n    const accountInfo = getAccountInformation(getState());\n\n    await dispatch(resetCheckout());\n\n    history.push(`/create-account?${new URLSearchParams(accountInfo)}`);\n};\n\nexport const continueShopping = history => async dispatch => {\n    await dispatch(resetCheckout());\n\n    history.push('/');\n};\n\n/* helpers */\n\nexport function formatAddress(address = {}, countries = []) {\n    const country = countries.find(({ id }) => id === 'US');\n    const { region_code } = address;\n    const { available_regions: regions } = country;\n    const region = regions.find(({ code }) => code === region_code);\n\n    return {\n        country_id: 'US',\n        region_id: region.id,\n        region_code: region.code,\n        region: region.name,\n        ...address\n    };\n}\n\nasync function clearBillingAddress() {\n    return storage.removeItem('billing_address');\n}\n\nasync function retrieveBillingAddress() {\n    return storage.getItem('billing_address');\n}\n\nasync function saveBillingAddress(address) {\n    return storage.setItem('billing_address', address);\n}\n\nasync function clearPaymentMethod() {\n    return storage.removeItem('paymentMethod');\n}\n\nasync function retrievePaymentMethod() {\n    return storage.getItem('paymentMethod');\n}\n\nasync function savePaymentMethod(method) {\n    return storage.setItem('paymentMethod', method);\n}\n\nasync function clearShippingAddress() {\n    return storage.removeItem('shipping_address');\n}\n\nasync function retrieveShippingAddress() {\n    return storage.getItem('shipping_address');\n}\n\nasync function saveShippingAddress(address) {\n    return storage.setItem('shipping_address', address);\n}\n\nasync function clearShippingMethod() {\n    return storage.removeItem('shippingMethod');\n}\n\nasync function retrieveShippingMethod() {\n    return storage.getItem('shippingMethod');\n}\n\nasync function saveShippingMethod(method) {\n    return storage.setItem('shippingMethod', method);\n}\n"],"file":"asyncActions.js"}