{"version":3,"sources":["../../../../src/components/Checkout/Receipt/receipt.js"],"names":["React","Component","Fragment","bool","func","shape","string","classify","Button","defaultClasses","CONTINUE_SHOPPING_BUTTON_ID","CREATE_ACCOUNT_BUTTON_ID","Receipt","props","createAccount","history","continueShopping","componentWillUnmount","reset","render","classes","order","id","user","root","body","header","textBlock","orderId","isSignedIn","footer","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,cAAP;AAEA,OAAO,MAAMC,2BAA2B,GAAG,0BAApC;AACP,OAAO,MAAMC,wBAAwB,GAAG,uBAAjC;;AAEP,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAAA;AAAA;;AAAA,2CA6BZ,MAAM;AAClB,WAAKY,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,OAApC;AACH,KA/B2B;;AAAA,8CAiCT,MAAM;AACrB,WAAKF,KAAL,CAAWG,gBAAX,CAA4B,KAAKH,KAAL,CAAWE,OAAvC;AACH,KAnC2B;AAAA;;AAyB5BE,EAAAA,oBAAoB,GAAG;AACnB,SAAKJ,KAAL,CAAWK,KAAX;AACH;;AAUDC,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,OADE;AAEFC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF,OAFL;AAGFC,MAAAA;AAHE,QAIF,KAAKV,KAJT;AAMA,WACI;AAAK,MAAA,SAAS,EAAEO,OAAO,CAACI;AAAxB,OACI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACK;AAAxB,OACI;AAAI,MAAA,SAAS,EAAEL,OAAO,CAACM;AAAvB,sCADJ,EAII;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACO;AAAxB,0BACoB,GADpB,EAEI;AAAM,MAAA,SAAS,EAAEP,OAAO,CAACQ;AAAzB,OAAmCN,EAAnC,CAFJ,EAGI,+BAHJ,8EAJJ,EAWI,oBAAC,MAAD;AACI,iBAASZ,2BADb;AAEI,MAAA,OAAO,EAAE,KAAKM;AAFlB,2BAXJ,EAiBK,CAACO,IAAI,CAACM,UAAN,IACG,oBAAC,QAAD,QACI;AAAK,MAAA,SAAS,EAAET,OAAO,CAACO;AAAxB,wFADJ,EAKI,oBAAC,MAAD;AACI,iBAAShB,wBADb;AAEI,MAAA,QAAQ,EAAC,MAFb;AAGI,MAAA,OAAO,EAAE,KAAKG;AAHlB,2BALJ,CAlBR,CADJ,CADJ;AAqCH;;AAjF2B;;gBAA1BF,O,eACiB;AACfQ,EAAAA,OAAO,EAAEf,KAAK,CAAC;AACXoB,IAAAA,IAAI,EAAEnB,MADK;AAEXwB,IAAAA,MAAM,EAAExB,MAFG;AAGXkB,IAAAA,IAAI,EAAElB;AAHK,GAAD,CADC;AAMfU,EAAAA,gBAAgB,EAAEZ,IAAI,CAAC2B,UANR;AAOfV,EAAAA,KAAK,EAAEhB,KAAK,CAAC;AACTiB,IAAAA,EAAE,EAAEhB;AADK,GAAD,CAAL,CAEJyB,UATY;AAUfjB,EAAAA,aAAa,EAAEV,IAAI,CAAC2B,UAVL;AAWfb,EAAAA,KAAK,EAAEd,IAAI,CAAC2B,UAXG;AAYfR,EAAAA,IAAI,EAAElB,KAAK,CAAC;AACRwB,IAAAA,UAAU,EAAE1B;AADJ,GAAD;AAZI,C;;gBADjBS,O,kBAkBoB;AAClBS,EAAAA,KAAK,EAAE,EADW;AAElBL,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAFR;AAGlBE,EAAAA,KAAK,EAAE,MAAM,CAAE,CAHG;AAIlBJ,EAAAA,aAAa,EAAE,MAAM,CAAE;AAJL,C;;AAiE1B,eAAeP,QAAQ,CAACE,cAAD,CAAR,CAAyBG,OAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { bool, func, shape, string } from 'prop-types';\nimport classify from 'src/classify';\nimport Button from 'src/components/Button';\nimport defaultClasses from './receipt.css';\n\nexport const CONTINUE_SHOPPING_BUTTON_ID = 'continue-shopping-button';\nexport const CREATE_ACCOUNT_BUTTON_ID = 'create-account-button';\n\nclass Receipt extends Component {\n    static propTypes = {\n        classes: shape({\n            body: string,\n            footer: string,\n            root: string\n        }),\n        continueShopping: func.isRequired,\n        order: shape({\n            id: string\n        }).isRequired,\n        createAccount: func.isRequired,\n        reset: func.isRequired,\n        user: shape({\n            isSignedIn: bool\n        })\n    };\n\n    static defaultProps = {\n        order: {},\n        continueShopping: () => {},\n        reset: () => {},\n        createAccount: () => {}\n    };\n\n    componentWillUnmount() {\n        this.props.reset();\n    }\n\n    createAccount = () => {\n        this.props.createAccount(this.props.history);\n    };\n\n    continueShopping = () => {\n        this.props.continueShopping(this.props.history);\n    };\n\n    render() {\n        const {\n            classes,\n            order: { id },\n            user\n        } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.body}>\n                    <h2 className={classes.header}>\n                        Thank you for your purchase!\n                    </h2>\n                    <div className={classes.textBlock}>\n                        Your order # is{' '}\n                        <span className={classes.orderId}>{id}</span>\n                        <br />\n                        We&rsquo;ll email you an order confirmation with details\n                        and tracking info\n                    </div>\n                    <Button\n                        data-id={CONTINUE_SHOPPING_BUTTON_ID}\n                        onClick={this.continueShopping}\n                    >\n                        Continue Shopping\n                    </Button>\n                    {!user.isSignedIn && (\n                        <Fragment>\n                            <div className={classes.textBlock}>\n                                Track order status and earn rewards for your\n                                purchase by creating and account.\n                            </div>\n                            <Button\n                                data-id={CREATE_ACCOUNT_BUTTON_ID}\n                                priority=\"high\"\n                                onClick={this.createAccount}\n                            >\n                                Create an Account\n                            </Button>\n                        </Fragment>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\nexport default classify(defaultClasses)(Receipt);\n"],"file":"receipt.js"}