{"version":3,"sources":["../../../src/components/Checkout/flow.js"],"names":["React","Component","array","bool","func","object","oneOf","shape","string","classify","Cart","Form","Receipt","defaultClasses","Flow","child","actions","cart","checkout","hasPaymentMethod","hasShippingAddress","hasShippingMethod","directory","isCartReady","isCheckoutReady","user","props","beginCheckout","cancelCheckout","editOrder","submitShippingAddress","submitOrder","submitPaymentMethodAndBillingAddress","submitShippingMethod","availableShippingMethods","billingAddress","editing","isAddressIncorrect","incorrectAddressMessage","paymentData","shippingAddress","shippingMethod","shippingTitle","step","submitting","stepProps","ready","render","classes","root","isRequired","details","cartId","totals","city","country_id","email","firstname","lastname","postcode","region_id","region_code","region","street","telephone","paymentCode","description","cardType","nonce","countries","isSignedIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { array, bool, func, object, oneOf, shape, string } from 'prop-types';\n\nimport classify from 'src/classify';\nimport Cart from './cart';\nimport Form from './form';\nimport Receipt from './Receipt';\nimport defaultClasses from './flow.css';\n\nclass Flow extends Component {\n    static propTypes = {\n        actions: shape({\n            beginCheckout: func,\n            cancelCheckout: func,\n            editOrder: func,\n            submitShippingAddress: func,\n            submitOrder: func,\n            submitPaymentMethodAndBillingAddress: func,\n            submitShippingMethod: func\n        }).isRequired,\n        cart: shape({\n            details: object,\n            cartId: string,\n            totals: object\n        }),\n        checkout: shape({\n            availableShippingMethods: array,\n            billingAddress: shape({\n                city: string,\n                country_id: string,\n                email: string,\n                firstname: string,\n                lastname: string,\n                postcode: string,\n                region_id: string,\n                region_code: string,\n                region: string,\n                street: array,\n                telephone: string\n            }),\n            editing: oneOf(['address', 'paymentMethod', 'shippingMethod']),\n            incorrectAddressMessage: string,\n            isAddressIncorrect: bool,\n            paymentCode: string,\n            paymentData: shape({\n                description: string,\n                details: shape({\n                    cardType: string\n                }),\n                nonce: string\n            }),\n            shippingAddress: shape({\n                city: string,\n                country_id: string,\n                email: string,\n                firstname: string,\n                lastname: string,\n                postcode: string,\n                region_id: string,\n                region_code: string,\n                region: string,\n                street: array,\n                telephone: string\n            }),\n            shippingMethod: string,\n            shippingTitle: string,\n            step: oneOf(['cart', 'form', 'receipt']).isRequired,\n            submitting: bool\n        }).isRequired,\n        directory: shape({\n            countries: array\n        }),\n        classes: shape({\n            root: string\n        }),\n        hasPaymentMethod: bool,\n        hasShippingAddress: bool,\n        hasShippingMethod: bool,\n        isCartReady: bool,\n        isCheckoutReady: bool,\n        paymentData: shape({\n            description: string,\n            details: shape({\n                cardType: string\n            }),\n            nonce: string\n        }),\n        shippingMethod: string,\n        shippingTitle: string,\n        user: shape({\n            isSignedIn: bool\n        })\n    };\n\n    get child() {\n        const {\n            actions,\n            cart,\n            checkout,\n            hasPaymentMethod,\n            hasShippingAddress,\n            hasShippingMethod,\n            directory,\n            isCartReady,\n            isCheckoutReady,\n            user\n        } = this.props;\n\n        const {\n            beginCheckout,\n            cancelCheckout,\n            editOrder,\n            submitShippingAddress,\n            submitOrder,\n            submitPaymentMethodAndBillingAddress,\n            submitShippingMethod\n        } = actions;\n\n        const {\n            availableShippingMethods,\n            billingAddress,\n            editing,\n            isAddressIncorrect,\n            incorrectAddressMessage,\n            paymentData,\n            shippingAddress,\n            shippingMethod,\n            shippingTitle,\n            step,\n            submitting\n        } = checkout;\n\n        switch (step) {\n            case 'cart': {\n                const stepProps = {\n                    beginCheckout,\n                    ready: isCartReady,\n                    submitting\n                };\n\n                return <Cart {...stepProps} />;\n            }\n            case 'form': {\n                const stepProps = {\n                    availableShippingMethods,\n                    billingAddress,\n                    cancelCheckout,\n                    cart,\n                    directory,\n                    editOrder,\n                    editing,\n                    hasPaymentMethod,\n                    hasShippingAddress,\n                    hasShippingMethod,\n                    incorrectAddressMessage,\n                    isAddressIncorrect,\n                    paymentData,\n                    ready: isCheckoutReady,\n                    shippingAddress,\n                    shippingMethod,\n                    shippingTitle,\n                    submitShippingAddress,\n                    submitOrder,\n                    submitPaymentMethodAndBillingAddress,\n                    submitShippingMethod,\n                    submitting\n                };\n\n                return <Form {...stepProps} />;\n            }\n            case 'receipt': {\n                const stepProps = {\n                    user\n                };\n\n                return <Receipt {...stepProps} />;\n            }\n            default: {\n                return null;\n            }\n        }\n    }\n\n    render() {\n        const { child, props } = this;\n        const { classes } = props;\n\n        return <div className={classes.root}>{child}</div>;\n    }\n}\n\nexport default classify(defaultClasses)(Flow);\n"],"file":"flow.js"}